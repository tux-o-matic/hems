---
- name: Common setup
  hosts: all
  vars:
    av_packages:
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - gstreamer1.0-omx
      - gstreamer1.0-omx-rpi
      - gstreamer1.0-tools
      - gstreamer1.0-plugins-base
      - gstreamer1.0-plugins-good
      - gstreamer1.0-plugins-ugly
      - x264
  tasks:
    - name: Install Video Dependencies
      package:
        name: item
      with_items: "{{ av_packages }}"

- name: Configure minions
  hosts: minions
  vars:
    cam_multicast_ip: '224.1.1.1'
    cam_multicast_port: '5000'
    gstlaunch_bin: '/usr/bin/gst-launch-1.0'
  tags:
    - never
    - minions
  tasks:
    - name: Create systemd service Unit
      template:
        src: 'templates/cam-stream.service.j2'
        dest: '/etc/systemd/system/cam-multicast-stream.service'
        owner: root
        group: root
        mode: '0644'
    - name: Start RTP multicast stream
      systemd:
        name: 'cam-multicast-stream'
        daemon_reload: yes
        enabled: yes
        state: started

- name: Configure brain
  hosts: brain
  vars:
    ansible_command_timeout: 3600
    opencv_ver: '4.3.0'
    stream_args: ''
    working_dir: '/opt/hems'
  tags:
    - never
    - brain
  tasks:
    - name: Create directory
      file:
        path: "{{ working_dir}}"
        state: directory
        mode: '0755'
    - name: Install Python environment
      package:
        name:
          - build-essential
          - cmake
          - gfortran
          - libatlas-base-dev
          - pkg-config
          - python3
          - python3-dev
          - python3-pip
          - python3-virtualenv
        state: latest
    - name: Install CV Dependencies
      package:
        name:
          - libgstreamer1.0-dev
          - libgstreamer-plugins-base1.0-dev
          - gstreamer1.0*
          - libjpeg-dev
          - libtiff5-dev
          - libjasper-dev
          - libpng-dev
          - libavcodec-dev
          - libavformat-dev
          - libhdf5-dev
          - libhdf5-serial-dev
          - libhdf5-103
          - libswscale-dev
          - libv4l-dev
          - libxvidcore-dev
          - libx264-dev

    - name: Download OpenCV soure
      get_url:
        url: "https://github.com/opencv/opencv/archive/{{ opencv_ver }}.zip"
        dest: "{{ working_dir}}/opencv.zip"

    - name: Download OpenCV contrib
      get_url:
        url: "https://github.com/opencv/opencv_contrib/archive/{{ opencv_ver }}.zip"
        dest: "{{ working_dir}}/opencv_contrib.zip"

    - name: Unzip OpenCV source
      shell:
        cmd: "unzip opencv.zip"
        chdir: "{{ working_dir}}"
        creates: "{{ working_dir}}/opencv-{{ opencv_ver }}"

    - name: Unzip OpenCV contrib
      shell:
        cmd: "unzip opencv_contrib.zip"
        chdir: "{{ working_dir}}"
        creates: "{{ working_dir}}/opencv_contrib-{{ opencv_ver }}"

    - name: Create Python virtual env
      shell:
        cmd: "virtualenv3 {{ working_dir }}/venv"
        creates: "{{ working_dir}}/venv"

    - name: Get PIP requirements
      get_url:
        url: https://github.com/tux-o-matic/hems/blob/master/requirements.txt
        dest: "{{ working_dir }}/requirements.txt"

    - name: Install Python libraries
      pip:
        requirements: "{{ working_dir }}/requirements.txt"
        virtualenv_python: python3

    - name: Create OpenCV build dir
      file:
        path: "{{ working_dir}}/opencv-{{ opencv_ver }}/build"
        state: directory
        mode: '0755'

    - name: Configure Make for OpenCV
      shell:
        cmd: "source {{ working_dir}}/venv/bin/activate && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH={{ working_dir}}/opencv_contrib-{{ opencv_ver }}/modules -D ENABLE_NEON=ON -D ENABLE_VFPV3=ON -D BUILD_TESTS=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D OPENCV_ENABLE_NONFREE=ON -D CMAKE_SHARED_LINKER_FLAGS=-latomic -D BUILD_EXAMPLES=OFF -D WITH_GSTREAMER=ON .."
        chdir: "{{ working_dir}}/opencv-{{ opencv_ver }}/build"

    - name: Make OpenCV
      shell:
        cmd: "source {{ working_dir}}/venv/bin/activate && make -j4"
        chdir: "{{ working_dir}}/opencv-{{ opencv_ver }}/build"

    - name: Install  OpenCV
      shell:
        cmd: "source {{ working_dir}}/venv/bin/activate && make install && ldconfig"
        chdir: "{{ working_dir}}/opencv-{{ opencv_ver }}/build"

    - name: Get Python code
      get_url:
        url: https://raw.githubusercontent.com/tux-o-matic/hems/master/stream.py
        dest: "{{ working_dir }}/stream.py"
    - name: Create systemd service Unit
      template:
        src: 'templates/stream.service.j2'
        dest: '/etc/systemd/system/stream.service'
        owner: root
        group: root
        mode: '0644'
    - name: Start RTP multicast stream
      systemd:
        name: 'stream'
        daemon_reload: yes
        enabled: yes
        state: started
